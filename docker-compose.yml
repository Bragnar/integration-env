version: '3'

services:
  nginx:
    image: library/nginx:latest
    container_name: nginx-service
    volumes:
      -  ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    networks:
      - nginx_network
    restart: on-failure

  portainer:
    image: portainer/portainer:latest
    container_name: "portainer-service"
    command: --admin-password '$$2y$$05$$R0vA31aOpCmU8OUUo210FeELJ02ueoQl8Fp6xtKxznQBccZ91nkSu' -H unix:///var/run/docker.sock
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9000
    expose:
      - 443
    networks:
      - nginx_network
    restart: always
    
  jenkins:
    image: jenkins/jenkins:latest
    container_name: jenkins-service
    expose:
      - 80
      - 50000
    volumes :
      - jenkins_data:/var/jenkins_home
    networks:
      - nginx_network
    restart: on-failure

  registry:
    image: registry:2
    container_name: registry-service
    restart: always
    ports:
      - 5000:5000
    volumes:
      - registry_data:/var/lib/registry
    networks:
      - nginx_network

  docker:
    image: docker:stable-dind
    container_name: docker-service
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=
    expose:
      - 2375
    volumes:
      - ./docker/daemon.json:/etc/docker/daemon.json
    networks:
      - nginx_network
    restart: on-failure

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube-service
    ports:
      - "9000:9000"
    networks:
      - nginx_network
    environment:
      - sonar.jdbc.url=jdbc:postgresql://sonarqube-db-service:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions

  sonarqube-db:
    image: postgres:latest
    container_name: sonarqube-db-service
    networks:
      - nginx_network
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - postgresql_data:/var/lib/postgresql/data

networks:
  nginx_network:
    driver: bridge
    internal: false
    
volumes:
  jenkins_data:
    driver : local
  portainer_data:
    driver : local
  registry_data:
    driver : local
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  postgresql_data:
